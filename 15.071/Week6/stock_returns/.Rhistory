x = c(0,3,-2)
y = c(-1,2,-2)
data$x = c(0,3,-2)
data = as.data.frame()
data = as.data.frame(x = c(0,3,-2))
View(data)
data$y = c(-1,2,-2)
View(data)
colnames(data) <- c(x,y)
colnames(data)
data = data.frame(x = c(0,3,-2), y = c(-1,2,2))
View(data)
data = data.frame(x = c(0,3,-2), y = c(-1,2,2))
model1 <- lm(x ~ y, data = )
summary(model1)
31/26
data = data.frame(y = c(0,3,-2), x = c(-1,2,2))
model1 <- lm(x ~ y, data = )
summary(model1)
# Residuals:
#   1       2       3
# 0.4615 -0.1154 -0.3462
#
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)
# (Intercept)   0.7308     0.3462   2.111    0.282
# y             1.1923     0.1999   5.966    0.106
#
# Residual standard error: 0.5883 on 1 degrees of freedom
# Multiple R-squared:  0.9727,	Adjusted R-squared:  0.9453
# F-statistic: 35.59 on 1 and 1 DF,  p-value: 0.1057
31/26
19/26
predict(model1)
predict(model1)-data$x
sum(predict(model1)-data$x)
sigmoid <- function(a){
return(1/(1+exp(-a))
}
# sigmoid function
sigmoid <- function(a){
return(1/(1+exp(-a)))
}
log(e)
log(1)
log(01)
log(10)
version
getwd()
setwd("MOOC/15.071/Week6/daily_kos/")
read.csv("dailykos.csv")
dailykos = read.csv("dailykos.csv")
distances = dist(dailykos, method = "euclidean")
View(dailykos)
View(dailykos)
dailykos = read.csv("dailykos.csv")
str(dailykos)
ncol(distances)
ncol(dailykos)
distances = dist(dailykos, method = "euclidean")
cluster = hclust(distances, method = "ward.D")
plot(cluster)
View(dailykos)
clusterGroups = cutree(cluster, k=7)
cluster1
cluster1
cluster1
cluster1
cluster1
cluster1
cluster1 = subset(dailykos, cluster1==1)
cluster1 = subset(dailykos, clusterGroups==1)
cluster2 = subset(dailykos, clusterGroups==2)
cluster3 = subset(dailykos, clusterGroups==3)
cluster4 = subset(dailykos, clusterGroups==4)
cluster5 = subset(dailykos, clusterGroups==5)
cluster6 = subset(dailykos, clusterGroups==6)
cluster7 = subset(dailykos, clusterGroups==7)
nrow(cluster3)
nrow(cluster1)
nrow(cluster1)
nrow(cluster3)
nrow(cluster4)
nrow(cluster5)
nrow(cluster6)
nrow(cluster7)
nrow(cluster2)
tail(sort(colMeans(HierCluster1)))
tail(sort(colMeans(cluster1)))
tail(sort(colMeans(cluster2)))
tail(sort(colMeans(cluster3)))
tail(sort(colMeans(cluster4)))
tail(sort(colMeans(cluster5)))
tail(sort(colMeans(cluster6)))
tail(sort(colMeans(cluster7)))
getwd()
setwd('/home/musigma/MOOC/15.071/Week6/airlines_segmentation/')
airlines = read.csv("AirlinesCluster.csv")
rm(list=ls())
airlines = read.csv("AirlinesCluster.csv")
View(airlines)
summary(airlines)
library(caret)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
summary(airlinesNorm)
distances = dist(airlinesNorm, method = "euclidean")
cluster = hclust(distances, method = "ward.D")
plot(cluster)
clusterGroups = cutree(cluster, k = 5)
nrow(subset(cluster, clusterGroups==1))
length(subset(cluster, clusterGroups==1))
tapply(airlines$Balance, clusterGroups, mean)
tapply(airlines$QualMiles, clusterGroups, mean)
tapply(airlines$BonusMiles, clusterGroups, mean)
tapply(airlines$BonusTrans, clusterGroups, mean)
tapply(airlines$FlightMiles, clusterGroups, mean)
tapply(airlines$FlightTrans, clusterGroups, mean)
tapply(airlines$DaysSinceEnroll, clusterGroups, mean)
tapply(airlines$Balance, clusterGroups, mean)
tapply(airlines$QualMiles, clusterGroups, mean)
tapply(airlines$BonusMiles, clusterGroups, mean)
tapply(airlines$BonusTrans, clusterGroups, mean)
tapply(airlines$FlightMiles, clusterGroups, mean)
tapply(airlines$FlightTrans, clusterGroups, mean)
tapply(airlines$DaysSinceEnroll, clusterGroups, mean)
getwd()
setwd("/home/musigma/MOOC/15.071/Week6/stock_returns/")
rm(list=ls())
stocks = read.csv("StocksCluster.csv")
View(stocks)
which(stocks$PositiveDec==1)
len(which(stocks$PositiveDec==1))
length(which(stocks$PositiveDec==1))
length(which(stocks$PositiveDec==1))/nrow(stocks)
cor(stocks)
cor(stocks[1:11])
max(cor(stocks[1:11]))
sort(cor(stocks[1:11]))
tail(sort(cor(stocks[1:11])))
?tail
tail(sort(cor(stocks[1:11])), 10)
tail(sort(cor(stocks[1:11])), 12)
tail(sort(cor(stocks[1:11])), 15)
colMeans(stocks)
min(colMeans(stocks))
max(colMeans(stocks))
min(colMeans(stocks[1:11]))
colMeans(stocks[1:11])
min(colMeans(stocks[1:11]))
max(colMeans(stocks[1:11]))
set.seed(144)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
library(caTools)
set.seed(144)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
stocksTrain = subset(stocks, spl == TRUE)
stocksTest = subset(stocks, spl == FALSE)
StocksModel = glm(PositiveDec~., data = stocksTrain, family = binomail)
StocksModel = glm(PositiveDec~., data = stocksTrain, family = binomial)
table(stocksTrain$PositiveDec, predict(StocksModel, type="response"))
table(stocksTrain$PositiveDec, predict(StocksModel, type="response") > 0.5)
source('~/MOOC/15.071/Week6/stock_returns/stocks.R', echo=TRUE)
(990+3640)/nrow(stocksTrain)
table(stocksTrain$PositiveDec, predict(StocksModel, newdata = stocksTest, type="response") > 0.5)
table(stocksTest$PositiveDec, predict(StocksModel, newdata = stocksTest, type="response") > 0.5)
(417+1553)/nrow(stocksTest)
table(stocksTest$PositiveDec)
(1897)/nrow(stocksTest)
limitedTrain = stocksTrain
limitedTrain$PositiveDec = NULL
limitedTest = stocksTest
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
mean(normTrain$ReturnJan)
mean(normTest$ReturnJan)
